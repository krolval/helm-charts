name: Helm Chart Release
on:
  workflow_dispatch:
  push:
    branches:
      - test
    paths:
      - 'charts/**'
jobs:
  documentation:
    runs-on: ubuntu-20.04
    container:
      image: alpine
    steps:
      - name: Install Dependencies
        run: |
          apk add jq git curl
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Helm Docs
        run: |
          curl -s -L -o /usr/local/bin/helm-docs.tar.gz "https://github.com/norwoodj/helm-docs/releases/download/$(curl --silent "https://api.github.com/repos/norwoodj/helm-docs/releases/latest" | jq -r .tag_name)/helm-docs_$(curl --silent "https://api.github.com/repos/norwoodj/helm-docs/releases/latest" | jq -r .tag_name | cut -d "v" -f2-)_Linux_x86_64.tar.gz"
          cd /usr/local/bin/ && tar xfv helm-docs.tar.gz
          chmod +x ./helm-docs

      - name: Update Documentation
        run: |
          git status
          CHARTS_ROOT="./charts"
          if [ -d "${CHARTS_ROOT}" ]; then
            ## Generate Documentation
            helm-docs
            ## Push Changes
            git config user.name "$GITHUB_ACTOR"
            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git add -A
            git commit -sam "Update Documentation" || true
            git push || true
          else
            echo -e "\n\e[33m-- Root Directory not found: $CHART_ROOT\e[0m" && exit 0;
          fi

  release:
    runs-on: ubuntu-20.04
    needs:
      - documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.0
      - name: Helm Chart Publish
        uses: buttahtoast/helm-release-action@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          chartRoot: charts/
          kubeLinterDefaultConfig: kube-linter.yaml

