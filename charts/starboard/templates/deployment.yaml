apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "starboard-operator.fullname" . }}
  labels:
    {{- include "starboard-operator.labels" . | nindent 4 }}
spec:
  # NOTE: replicas and strategy.type is set like this explicitly to avoid ending
  #       up with starboard-operator instances disrupting each other. If
  #       starboard-operator is confirmed to be highly available,
  #       strategy.type==Recreate can be removed and replicas can be allowed to
  #       be configurable.
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "starboard-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ .Values.envSecret.stringData | toYaml | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
      labels:
        {{- include "starboard-operator.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: OPERATOR_NAMESPACE
              value: {{ .Release.Namespace | quote }}
            - name: OPERATOR_TARGET_NAMESPACES
              value: {{ tpl .Values.targetNamespaces . | quote }}
            - name: OPERATOR_METRICS_BIND_ADDRESS
              value: ":8080"
            - name: OPERATOR_HEALTH_PROBE_BIND_ADDRESS
              value: ":9090"
            {{- /* Import configuration from passed Helm values */}}
            {{- range $key, $value := .Values.envSecret.stringData }}
            {{- if $value }}
            - name: {{ $key | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.envSecret.name | default (include "starboard-operator.fullname" $) | quote }}
                  key: {{ $key | quote }}
                  optional: true
            {{- end }}
            {{- end }}
          ports:
            # metrics port is exposed by the k8s Service and by default also
            # have annotations which will help prometheus as a target for
            # scraping of metrics
            - name: metrics
              containerPort: 8080
            # probes port is not exposed by the k8s Service and used directly by
            # kubelet for the readinessProbe and livenessProbe
            - name: probes
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /readyz/
              port: probes
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz/
              port: probes
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "starboard-operator.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
